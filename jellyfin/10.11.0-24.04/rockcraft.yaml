name: jellyfin
base: ubuntu@24.04
version: '10.11.0'
summary: The Free Software Media System
description: |
    Jellyfin is the volunteer-built media solution that puts you in control of
    your media. Stream to any device from your own server, with no strings
    attached. Your media, your server, your way.
license: GPL-2.0

platforms:
    amd64:
    arm64:

parts:
    backend:
        source: https://github.com/jellyfin/jellyfin.git
        plugin: nil
        build-snaps:
          - dotnet-sdk-90
        stage-packages:
          - libicu74
        build-environment:
            - X_DEBIAN_MULTIARCH_TRIPLET: $CRAFT_ARCH_TRIPLET_BUILD_FOR
        override-build: |
            case "$(dpkg --print-architecture)" in
                amd64)
                    DOTNET_RID="linux-x64"
                    ;;
                arm64)
                    DOTNET_RID="linux-arm64"
                    ;;
                *)
                    echo "unsupported architecture: '$(dpkg --print-architecture)"
                    exit 1
                    ;;
            esac

            SNAP_PATH=/snap/dotnet-sdk-90/current

            export PATH="${PATH}:${SNAP_PATH}/usr/lib/dotnet"
            export LD_LIBRARY_PATH="${SNAP_PATH}/usr/lib/${X_DEBIAN_MULTIARCH_TRIPLET}:${SNAP_PATH}/lib/${X_DEBIAN_MULTIARCH_TRIPLET}"
            
            cd Jellyfin.Server
            dotnet publish \
                --configuration Release \
                --self-contained true \
                --runtime "${DOTNET_RID}" \
                --output "${CRAFT_PART_INSTALL}/usr/lib/jellyfin" \
                -property:PublishReadyToRun=true \
                -property:DebugSymbols=false \
                -property:DebugType=none

    frontend:
        source: https://github.com/jellyfin/jellyfin-web.git
        plugin: nil
        build-snaps:
          - node/20/stable
        override-build: |
            npm install
            npm run build:development
            mkdir -p ${CRAFT_PART_INSTALL}/usr/lib
            mv dist ${CRAFT_PART_INSTALL}/usr/lib/jellyfin-web

    ffmpeg:
        plugin: nil
        stage-packages:
            - ffmpeg

services:
    jellyfin:
        override: replace
        startup: enabled
        command: /usr/lib/jellyfin/jellyfin
        kill-delay: 30s
        environment:
            LD_LIBRARY_PATH: "/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR"
            LC_ALL: "en_US.UTF-8"
            LANG: "en_US.UTF-8"
            LANGUAGE: "en_US:en"
            JELLYFIN_WEB_DIR: "/usr/lib/jellyfin-web"
            #JELLYFIN_FFMPEG: "/usr/bin/ffmpeg"
            # locations from official jellyfin docker image:
            JELLYFIN_DATA_DIR: "/config"
            JELLYFIN_CONFIG_DIR: "/config/config"
            JELLYFIN_LOG_DIR: "/config/log"
            JELLYFIN_CACHE_DIR: "/cache"
        
checks:
    jellyfin:
        override: replace
        level: alive
        period: 30s
        timeout: 30s
        http:
            url: http://127.0.0.1:8096/health
        